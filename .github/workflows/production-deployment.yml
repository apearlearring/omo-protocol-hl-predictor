name: Deploy to ECS

on:
    workflow_dispatch:

jobs:
    build:
        name: AWS ECS Deployment
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Set up AWS CLI
              uses: aws-actions/configure-aws-credentials@v3
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: "ap-southeast-1"

            - name: Log in to Amazon ECR
              id: ecr-login
              uses: aws-actions/amazon-ecr-login@v2

            - name: Create .env File
              run: |
                  echo "${{ secrets.GROQ_API_KEY }}" > .env
                  echo "${{ secrets.TWITTER_2FA_SECRET }}" > .env
                  echo "${{ secrets.TWITTER_COOKIES }}" > .env
                  echo "${{ secrets.TWITTER_DRY_RUN }}" > .env
                  echo "${{ secrets.TWITTER_EMAIL }}" > .env
                  echo "${{ secrets.TWITTER_PASSWORD }}" > .env
                  echo "${{ secrets.TWITTER_POLL_INTERVAL }}" > .env
                  echo "${{ secrets.TWITTER_USERNAME }}" > .env

            - name: Build and Tag Docker Image
              run: |
                  docker build \
                    --build-arg ENV_FILE=.env \
                    -t kol-starter:${{ github.sha }} .
                  docker tag kol-starter:${{ github.sha }} 905417993821.dkr.ecr.ap-southeast-1.amazonaws.com/omo/kol-starter:${{ github.sha }}

            - name: Push Docker Image to Amazon ECR
              run: |
                  docker push 905417993821.dkr.ecr.ap-southeast-1.amazonaws.com/omo/kol-starter:${{ github.sha }}

            - name: Deploy to Amazon ECS
              uses: aws-actions/amazon-ecs-deploy-task-definition@v2
              with:
                  task-definition: ecs-task-def.json
                  service: kol-starter-service
                  cluster: kol-starter-cluster
                  wait-for-service-stability: true
